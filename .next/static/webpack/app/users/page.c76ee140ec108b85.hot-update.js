"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/users/page",{

/***/ "(app-pages-browser)/./src/app/custom-hooks/useFetch.ts":
/*!******************************************!*\
  !*** ./src/app/custom-hooks/useFetch.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _redux_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../redux/hooks */ \"(app-pages-browser)/./src/app/redux/hooks.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n// import verifyStatus from \"./verifyStatus\";\nconst useFetch = ()=>{\n    const disptach = (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_0__.useAppDispatch)();\n    const handleFetch = async (fn)=>{\n        var _response_type;\n        const response = await disptach(fn());\n        if ((_response_type = response.type) === null || _response_type === void 0 ? void 0 : _response_type.includes(\"rejected\")) {\n            // verifyStatus(response.payload.status);\n            console.log(\"rejected\");\n            return;\n        }\n        console.log(\"response\", response);\n    };\n    const fetchById = async (fn, id)=>{\n        var _response_type;\n        const response = await disptach(fn(id));\n        if ((_response_type = response.type) === null || _response_type === void 0 ? void 0 : _response_type.includes(\"rejected\")) {\n            // verifyStatus(response.payload.status);\n            return;\n        }\n    };\n    return {\n        handleFetch,\n        fetchById\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useFetch);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY3VzdG9tLWhvb2tzL3VzZUZldGNoLnRzIiwibWFwcGluZ3MiOiI7OzZEQUNnRDtBQUNoRCw2Q0FBNkM7QUFFN0MsTUFBTUMsV0FBVztJQUNmLE1BQU1DLFdBQVdGLDREQUFjQTtJQUUvQixNQUFNRyxjQUFjLE9BQU9DO1lBR3JCQztRQUZKLE1BQU1BLFdBQVcsTUFBTUgsU0FBU0U7UUFFaEMsS0FBSUMsaUJBQUFBLFNBQVNDLElBQUksY0FBYkQscUNBQUFBLGVBQWVFLFFBQVEsQ0FBQyxhQUFhO1lBQ3ZDLHlDQUF5QztZQUN6Q0MsUUFBUUMsR0FBRyxDQUFDO1lBQ1o7UUFDRjtRQUVBRCxRQUFRQyxHQUFHLENBQUMsWUFBWUo7SUFDMUI7SUFFQSxNQUFNSyxZQUFZLE9BQU9OLElBQVNPO1lBRTVCTjtRQURKLE1BQU1BLFdBQVcsTUFBTUgsU0FBU0UsR0FBR087UUFDbkMsS0FBSU4saUJBQUFBLFNBQVNDLElBQUksY0FBYkQscUNBQUFBLGVBQWVFLFFBQVEsQ0FBQyxhQUFhO1lBQ3ZDLHlDQUF5QztZQUN6QztRQUNGO0lBQ0Y7SUFFQSxPQUFPO1FBQUVKO1FBQWFPO0lBQVU7QUFDbEM7QUFFQSwrREFBZVQsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL2N1c3RvbS1ob29rcy91c2VGZXRjaC50cz8yYjE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuaW1wb3J0IHsgdXNlQXBwRGlzcGF0Y2ggfSBmcm9tIFwiLi4vcmVkdXgvaG9va3NcIjtcbi8vIGltcG9ydCB2ZXJpZnlTdGF0dXMgZnJvbSBcIi4vdmVyaWZ5U3RhdHVzXCI7XG5cbmNvbnN0IHVzZUZldGNoID0gKCkgPT4ge1xuICBjb25zdCBkaXNwdGFjaCA9IHVzZUFwcERpc3BhdGNoKCk7XG5cbiAgY29uc3QgaGFuZGxlRmV0Y2ggPSBhc3luYyAoZm46IGFueSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGlzcHRhY2goZm4oKSk7XG5cbiAgICBpZiAocmVzcG9uc2UudHlwZT8uaW5jbHVkZXMoXCJyZWplY3RlZFwiKSkge1xuICAgICAgLy8gdmVyaWZ5U3RhdHVzKHJlc3BvbnNlLnBheWxvYWQuc3RhdHVzKTtcbiAgICAgIGNvbnNvbGUubG9nKFwicmVqZWN0ZWRcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coXCJyZXNwb25zZVwiLCByZXNwb25zZSk7XG4gIH07XG5cbiAgY29uc3QgZmV0Y2hCeUlkID0gYXN5bmMgKGZuOiBhbnksIGlkOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRpc3B0YWNoKGZuKGlkKSk7XG4gICAgaWYgKHJlc3BvbnNlLnR5cGU/LmluY2x1ZGVzKFwicmVqZWN0ZWRcIikpIHtcbiAgICAgIC8vIHZlcmlmeVN0YXR1cyhyZXNwb25zZS5wYXlsb2FkLnN0YXR1cyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB7IGhhbmRsZUZldGNoLCBmZXRjaEJ5SWQgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUZldGNoO1xuIl0sIm5hbWVzIjpbInVzZUFwcERpc3BhdGNoIiwidXNlRmV0Y2giLCJkaXNwdGFjaCIsImhhbmRsZUZldGNoIiwiZm4iLCJyZXNwb25zZSIsInR5cGUiLCJpbmNsdWRlcyIsImNvbnNvbGUiLCJsb2ciLCJmZXRjaEJ5SWQiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/custom-hooks/useFetch.ts\n"));

/***/ })

});